{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Documents/code/React/React-The-Complete-Guide/01-starting-setup/src/components/Expenses/ExpenseItem.js\";\nimport Card from '../UI/Card';\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseItem = props => {\n  let title = props.title; //為何要做這種轉變呢？\n  //藉由 title 改變 title 名稱，但是點擊毫無反應\n\n  const clickHandler = () => {\n    // console.log('Clicked!!!!');\n    title = 'Updated!';\n    console.log(title); //既然 title 都確實運作以及改變 ，為何 DOM 卻毫無變化呢？\n    // react 實際上是如何傳遞 JSX 程式碼的\n    //你的 component 是一個函數\n    //在 Expense.js 上的 <ExpenseItem/>在 react後台 就是一個呼叫函數\n    // React 不會重複讀取已仔入的內容\n    //所以需要藉由 state 來幫助 react提醒哪些改變了\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: props.amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"Change Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["Card","ExpenseDate","ExpenseItem","props","title","clickHandler","console","log","date","amount"],"sources":["/Users/macos/Documents/code/React/React-The-Complete-Guide/01-starting-setup/src/components/Expenses/ExpenseItem.js"],"sourcesContent":["import Card from '../UI/Card';\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = props => {\n\tlet title = props.title;\n\n\t//為何要做這種轉變呢？\n\t//藉由 title 改變 title 名稱，但是點擊毫無反應\n\n\tconst clickHandler = () => {\n\t\t// console.log('Clicked!!!!');\n\t\ttitle = 'Updated!';\n\t\tconsole.log(title);\n\t\t//既然 title 都確實運作以及改變 ，為何 DOM 卻毫無變化呢？\n\n\t\t// react 實際上是如何傳遞 JSX 程式碼的\n\n\t\t//你的 component 是一個函數\n\n\t\t//在 Expense.js 上的 <ExpenseItem/>在 react後台 就是一個呼叫函數\n\n\t\t// React 不會重複讀取已仔入的內容\n\n\t\t//所以需要藉由 state 來幫助 react提醒哪些改變了\n\t};\n\n\treturn (\n\t\t<Card className=\"expense-item\">\n\t\t\t<ExpenseDate date={props.date} />\n\t\t\t<div className=\"expense-item__description\">\n\t\t\t\t{/* <h2>{props.title}</h2> */}\n\t\t\t\t{/* 轉變成 */}\n\t\t\t\t<h2>{title}</h2>\n\t\t\t\t<div className=\"expense-item__price\">{props.amount}</div>\n\t\t\t</div>\n\t\t\t<button onClick={clickHandler}>Change Title</button>\n\t\t</Card>\n\t);\n};\n\nexport default ExpenseItem;\n"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;EAC5B,IAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB,CAD4B,CAG5B;EACA;;EAEA,MAAMC,YAAY,GAAG,MAAM;IAC1B;IACAD,KAAK,GAAG,UAAR;IACAE,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAH0B,CAI1B;IAEA;IAEA;IAEA;IAEA;IAEA;EACA,CAfD;;EAiBA,oBACC,QAAC,IAAD;IAAM,SAAS,EAAC,cAAhB;IAAA,wBACC,QAAC,WAAD;MAAa,IAAI,EAAED,KAAK,CAACK;IAAzB;MAAA;MAAA;MAAA;IAAA,QADD,eAEC;MAAK,SAAS,EAAC,2BAAf;MAAA,wBAGC;QAAA,UAAKJ;MAAL;QAAA;QAAA;QAAA;MAAA,QAHD,eAIC;QAAK,SAAS,EAAC,qBAAf;QAAA,UAAsCD,KAAK,CAACM;MAA5C;QAAA;QAAA;QAAA;MAAA,QAJD;IAAA;MAAA;MAAA;MAAA;IAAA,QAFD,eAQC;MAAQ,OAAO,EAAEJ,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAYA,CAnCD;;KAAMH,W;AAqCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}