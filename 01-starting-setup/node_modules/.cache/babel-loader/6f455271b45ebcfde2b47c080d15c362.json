{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/macos/Documents/code/React/React-The-Complete-Guide/01-starting-setup/src/components/Expenses/ExpenseItem.js\";\n\nimport React from 'react';\nimport Card from '../UI/Card';\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\n\nvar ExpenseItem = function ExpenseItem(props) {\n  //\n\n  /* \n     \n     為什麼命名方式使用const\n     我們並沒有用 等號去賦值，更換值的方式是透過 React的其他功能，\n     所以相對的指示呼叫相關 function 而不是賦予新的值\n      useState 註冊一些狀態， 一種值 一些狀態 對於調用他的組件\n     =>它為特定組件實例去註冊它\n      此外，每當狀態改變時，也只是針對那特定的項目\n      */\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"expense-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ExpenseDate, {\n    date: props.date,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"expense-item__description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"expense-item__price\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, props.amount)));\n};\n\nexport default ExpenseItem;","map":{"version":3,"names":["React","Card","ExpenseDate","ExpenseItem","props","date","title","amount"],"sources":["/Users/macos/Documents/code/React/React-The-Complete-Guide/01-starting-setup/src/components/Expenses/ExpenseItem.js"],"sourcesContent":["import React from 'react';\n\nimport Card from '../UI/Card';\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = props => {\n\t//\n\n\t/* \n    \n    為什麼命名方式使用const\n    我們並沒有用 等號去賦值，更換值的方式是透過 React的其他功能，\n    所以相對的指示呼叫相關 function 而不是賦予新的值\n\n    useState 註冊一些狀態， 一種值 一些狀態 對於調用他的組件\n    =>它為特定組件實例去註冊它\n\n    此外，每當狀態改變時，也只是針對那特定的項目\n\n    */\n\n\treturn (\n\t\t<Card className=\"expense-item\">\n\t\t\t<ExpenseDate date={props.date} />\n\t\t\t<div className=\"expense-item__description\">\n\t\t\t\t<h2>{title}</h2>\n\t\t\t\t<div className=\"expense-item__price\">{props.amount}</div>\n\t\t\t</div>\n\t\t</Card>\n\t);\n};\n\nexport default ExpenseItem;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,mBAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;EAC5B;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAKC,oBACC,oBAAC,IAAD;IAAM,SAAS,EAAC,cAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACC,oBAAC,WAAD;IAAa,IAAI,EAAEA,KAAK,CAACC,IAAzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADD,eAEC;IAAK,SAAS,EAAC,2BAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKC,KAAL,CADD,eAEC;IAAK,SAAS,EAAC,qBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAsCF,KAAK,CAACG,MAA5C,CAFD,CAFD,CADD;AASA,CAzBD;;AA2BA,eAAeJ,WAAf"},"metadata":{},"sourceType":"module"}