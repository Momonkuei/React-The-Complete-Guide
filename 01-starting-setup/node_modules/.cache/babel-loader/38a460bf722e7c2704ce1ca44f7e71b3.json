{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Documents/code/React/React-The-Complete-Guide/01-starting-setup/src/App.jsx\";\nimport React from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  //原本的做法\n  // const para = document.createElement('p');\n  // para.textCpntent = 'Tis is also visible';\n  // document.getElementById('root').append(para);\n  const expenses = [{\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14)\n  }, {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  }, {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28)\n  }, {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12)\n  }]; // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // )\n  // React.createElement(創建網頁元素字串, 物件class屬性, 內容)\n  // 第一个参数是必填, 传入的是似HTML标签名称, eg: ul, li\n  // 第二个参数是选填.表示的是属性, eg: className\n  // 第三个参数是选填, 子节点, eg: 要显示的文本内容\n  //使用自定義元件不能使用字串\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Expenses, {\n      items: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Expenses","App","props","expenses","id","title","amount","date","Date"],"sources":["/Users/macos/Documents/code/React/React-The-Complete-Guide/01-starting-setup/src/App.jsx"],"sourcesContent":["import React from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst App = (props) => {\n  //原本的做法\n  // const para = document.createElement('p');\n  // para.textCpntent = 'Tis is also visible';\n  // document.getElementById('root').append(para);\n  const expenses = [\n    {\n      id: 'e1', title: 'Toilet Paper',\n\n\n\n\n\n\n\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // )\n\n  // React.createElement(創建網頁元素字串, 物件class屬性, 內容)\n  // 第一个参数是必填, 传入的是似HTML标签名称, eg: ul, li\n  // 第二个参数是选填.表示的是属性, eg: className\n  // 第三个参数是选填, 子节点, eg: 要显示的文本内容\n  //使用自定義元件不能使用字串\n\n\n  return (\n    <div>\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;EACrB;EACA;EACA;EACA;EACA,MAAMC,QAAQ,GAAG,CACf;IACEC,EAAE,EAAE,IADN;IACYC,KAAK,EAAE,cADnB;IASEC,MAAM,EAAE,KATV;IAUEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;EAVR,CADe,EAaf;IAAEJ,EAAE,EAAE,IAAN;IAAYC,KAAK,EAAE,QAAnB;IAA6BC,MAAM,EAAE,MAArC;IAA6CC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;EAAnD,CAbe,EAcf;IACEJ,EAAE,EAAE,IADN;IAEEC,KAAK,EAAE,eAFT;IAGEC,MAAM,EAAE,MAHV;IAIEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;EAJR,CAde,EAoBf;IACEJ,EAAE,EAAE,IADN;IAEEC,KAAK,EAAE,mBAFT;IAGEC,MAAM,EAAE,GAHV;IAIEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;EAJR,CApBe,CAAjB,CALqB,CAkCrB;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;EAGA,oBACE;IAAA,uBACE,QAAC,QAAD;MAAU,KAAK,EAAEL;IAAjB;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CArDD;;KAAMF,G;AAuDN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}