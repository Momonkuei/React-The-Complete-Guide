{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/macos/Documents/code/React/React-The-Complete-Guide/01-starting-setup/src/components/Expenses/ExpensesChart.js\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport Chart from '../Chart/Chart';\n\nvar ExpensesChart = function ExpensesChart(props) {\n  var chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n\n  var _iterator = _createForOfIteratorHelper(props.expenses),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var expense = _step.value;\n      var expenseMonth = expense.date.getMonth(); //從０開始 => January => 0\n\n      chartDataPoints[expenseMonth].value += expense.amount;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return /*#__PURE__*/React.createElement(Chart, {\n    dataPoints: chartDataPoints,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default ExpensesChart;","map":{"version":3,"names":["React","Chart","ExpensesChart","props","chartDataPoints","label","value","expenses","expense","expenseMonth","date","getMonth","amount"],"sources":["/Users/macos/Documents/code/React/React-The-Complete-Guide/01-starting-setup/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from 'react';\nimport Chart from '../Chart/Chart';\n\nconst ExpensesChart = props => {\n\tconst chartDataPoints = [\n\t\t{ label: 'Jan', value: 0 },\n\t\t{ label: 'Feb', value: 0 },\n\t\t{ label: 'Mar', value: 0 },\n\t\t{ label: 'Apr', value: 0 },\n\t\t{ label: 'May', value: 0 },\n\t\t{ label: 'Jun', value: 0 },\n\t\t{ label: 'Jul', value: 0 },\n\t\t{ label: 'Aug', value: 0 },\n\t\t{ label: 'Sep', value: 0 },\n\t\t{ label: 'Oct', value: 0 },\n\t\t{ label: 'Nov', value: 0 },\n\t\t{ label: 'Dec', value: 0 },\n\t];\n\n\tfor (const expense of props.expenses) {\n\t\tconst expenseMonth = expense.date.getMonth(); //從０開始 => January => 0\n\t\tchartDataPoints[expenseMonth].value += expense.amount;\n\t}\n\n\treturn <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;EAC9B,IAAMC,eAAe,GAAG,CACvB;IAAEC,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CADuB,EAEvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAFuB,EAGvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAHuB,EAIvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAJuB,EAKvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CALuB,EAMvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CANuB,EAOvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAPuB,EAQvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CARuB,EASvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CATuB,EAUvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAVuB,EAWvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAXuB,EAYvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAZuB,CAAxB;;EAD8B,2CAgBRH,KAAK,CAACI,QAhBE;EAAA;;EAAA;IAgB9B,oDAAsC;MAAA,IAA3BC,OAA2B;MACrC,IAAMC,YAAY,GAAGD,OAAO,CAACE,IAAR,CAAaC,QAAb,EAArB,CADqC,CACS;;MAC9CP,eAAe,CAACK,YAAD,CAAf,CAA8BH,KAA9B,IAAuCE,OAAO,CAACI,MAA/C;IACA;EAnB6B;IAAA;EAAA;IAAA;EAAA;;EAqB9B,oBAAO,oBAAC,KAAD;IAAO,UAAU,EAAER,eAAnB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAP;AACA,CAtBD;;AAwBA,eAAeF,aAAf"},"metadata":{},"sourceType":"module"}