{"ast":null,"code":"import _objectSpread from \"/Users/macos/Documents/code/React/React-The-Complete-Guide/01-starting-setup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/macos/Documents/code/React/React-The-Complete-Guide/01-starting-setup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/macos/Documents/code/React/React-The-Complete-Guide/01-starting-setup/src/components/NewExpense/ExpenseForm.js\";\n\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\n\nvar ExpenseForm = function ExpenseForm() {\n  // document.getElementById('').addEventListener('click', event => {});\n  //默認的模式\n  // const [enteredTitle, setEnteredTitle] = useState('');\n  // const [enteredAmount, setEnteredAmount] = useState('');\n  // const [enteredDate, setEnteredDate] = useState('');\n  //用空字串初始化，確保所有輸入資料都是字串。\n  //優化方式\n  var _useState = useState({\n    enteredTitle: '',\n    enteredAmount: '',\n    enteredDate: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userInput = _useState2[0],\n      setUserInput = _useState2[1]; //使用這項方法須確保其他資料不會遺失．\n\n  /*\n  \t\t先解構，確保原本的資料沒有遺失，再更換更新的值。\n  \t\t缺點是還需要去思考複製就的值\n  \t\t可能存在的缺點如下\n  \t\t無論何時更新狀態，在你所依賴的前狀態\n  \t\tReact 對於狀態更新做出反應，\n  \t\t但它並不會立即執行這些操作。\n  \t\t獲句話說，如果你有很多狀態同時更新\n  \t\t你有可寧讀取的資料是舊的狀態。\n  \t*/\n\n\n  var titleChangeHandler = function titleChangeHandler(event) {\n    // console.log(event.target.value);\n    // setEnteredTitle(event.target.value);\n    // setUserInput({\n    // \t...userInput,\n    // \tenteredTitle: event.target.value,\n    // });\n    setUserInput(function (prevState) {\n      return _objectSpread({}, prevState, {\n        enteredTitle: event.target.value\n      }); //這樣做可以確保讀取資料都是最新的狀態\n    });\n  };\n\n  var amountChangeHandler = function amountChangeHandler(event) {\n    // console.log(event.target.value);\n    // setEnteredAmount(event.target.value);\n    setUserInput(_objectSpread({}, userInput, {\n      enteredAmount: event.target.value\n    }));\n  };\n\n  var dateChangeHandler = function dateChangeHandler(event) {\n    // console.log(event.target.value);\n    // setEnteredAmount(event.target.value);\n    setUserInput(_objectSpread({}, userInput, {\n      enteredDate: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    action: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-expense__controls\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-expense__control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 6\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: titleChangeHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-expense__control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"1\",\n    step: \"1\",\n    onChange: amountChangeHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-expense__control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    min: \"2022-01-01\",\n    max: \"2022-12-31\",\n    onChange: dateChangeHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-expense__actions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }\n  }, \"Add Expense\"))));\n};\n\nexport default ExpenseForm;","map":{"version":3,"names":["React","useState","ExpenseForm","enteredTitle","enteredAmount","enteredDate","userInput","setUserInput","titleChangeHandler","event","prevState","target","value","amountChangeHandler","dateChangeHandler"],"sources":["/Users/macos/Documents/code/React/React-The-Complete-Guide/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = () => {\n\t// document.getElementById('').addEventListener('click', event => {});\n\t//默認的模式\n\n\t// const [enteredTitle, setEnteredTitle] = useState('');\n\t// const [enteredAmount, setEnteredAmount] = useState('');\n\t// const [enteredDate, setEnteredDate] = useState('');\n\t//用空字串初始化，確保所有輸入資料都是字串。\n\t//優化方式\n\tconst [userInput, setUserInput] = useState({\n\t\tenteredTitle: '',\n\t\tenteredAmount: '',\n\t\tenteredDate: '',\n\t});\n\t//使用這項方法須確保其他資料不會遺失．\n\t/*\n\t\t\t先解構，確保原本的資料沒有遺失，再更換更新的值。\n\t\t\t缺點是還需要去思考複製就的值\n\t\t\t可能存在的缺點如下\n\t\t\t無論何時更新狀態，在你所依賴的前狀態\n\t\t\tReact 對於狀態更新做出反應，\n\t\t\t但它並不會立即執行這些操作。\n\t\t\t獲句話說，如果你有很多狀態同時更新\n\t\t\t你有可寧讀取的資料是舊的狀態。\n\t\t*/\n\n\tconst titleChangeHandler = event => {\n\t\t// console.log(event.target.value);\n\t\t// setEnteredTitle(event.target.value);\n\n\t\t// setUserInput({\n\t\t// \t...userInput,\n\t\t// \tenteredTitle: event.target.value,\n\t\t// });\n\t\tsetUserInput(prevState => {\n\t\t\treturn { ...prevState, enteredTitle: event.target.value };\n\t\t\t//這樣做可以確保讀取資料都是最新的狀態\n\t\t});\n\t};\n\n\tconst amountChangeHandler = event => {\n\t\t// console.log(event.target.value);\n\t\t// setEnteredAmount(event.target.value);\n\t\tsetUserInput({\n\t\t\t...userInput,\n\t\t\tenteredAmount: event.target.value,\n\t\t});\n\t};\n\n\tconst dateChangeHandler = event => {\n\t\t// console.log(event.target.value);\n\t\t// setEnteredAmount(event.target.value);\n\t\tsetUserInput({\n\t\t\t...userInput,\n\t\t\tenteredDate: event.target.value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<form action=\"#\">\n\t\t\t<div className=\"new-expense__controls\">\n\t\t\t\t<div className=\"new-expense__control\">\n\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t<input type=\"text\" onChange={titleChangeHandler} />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"new-expense__control\">\n\t\t\t\t\t<label>Amount</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\tstep=\"1\"\n\t\t\t\t\t\tonChange={amountChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"new-expense__control\">\n\t\t\t\t\t<label>Date</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\tmin=\"2022-01-01\"\n\t\t\t\t\t\tmax=\"2022-12-31\"\n\t\t\t\t\t\tonChange={dateChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"new-expense__actions\">\n\t\t\t\t\t<button type=\"submit\">Add Expense</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default ExpenseForm;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;EACzB;EACA;EAEA;EACA;EACA;EACA;EACA;EARyB,gBASSD,QAAQ,CAAC;IAC1CE,YAAY,EAAE,EAD4B;IAE1CC,aAAa,EAAE,EAF2B;IAG1CC,WAAW,EAAE;EAH6B,CAAD,CATjB;EAAA;EAAA,IASlBC,SATkB;EAAA,IASPC,YATO,kBAczB;;EACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAEC,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK,EAAI;IACnC;IACA;IAEA;IACA;IACA;IACA;IACAF,YAAY,CAAC,UAAAG,SAAS,EAAI;MACzB,yBAAYA,SAAZ;QAAuBP,YAAY,EAAEM,KAAK,CAACE,MAAN,CAAaC;MAAlD,GADyB,CAEzB;IACA,CAHW,CAAZ;EAIA,CAZD;;EAcA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAJ,KAAK,EAAI;IACpC;IACA;IACAF,YAAY,mBACRD,SADQ;MAEXF,aAAa,EAAEK,KAAK,CAACE,MAAN,CAAaC;IAFjB,GAAZ;EAIA,CAPD;;EASA,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAL,KAAK,EAAI;IAClC;IACA;IACAF,YAAY,mBACRD,SADQ;MAEXD,WAAW,EAAEI,KAAK,CAACE,MAAN,CAAaC;IAFf,GAAZ;EAIA,CAPD;;EASA,oBACC;IAAM,MAAM,EAAC,GAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACC;IAAK,SAAS,EAAC,uBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACC;IAAK,SAAS,EAAC,sBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WADD,eAEC;IAAO,IAAI,EAAC,MAAZ;IAAmB,QAAQ,EAAEJ,kBAA7B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFD,CADD,eAMC;IAAK,SAAS,EAAC,sBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YADD,eAEC;IACC,IAAI,EAAC,QADN;IAEC,GAAG,EAAC,GAFL;IAGC,IAAI,EAAC,GAHN;IAIC,QAAQ,EAAEK,mBAJX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFD,CAND,eAgBC;IAAK,SAAS,EAAC,sBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UADD,eAEC;IACC,IAAI,EAAC,MADN;IAEC,GAAG,EAAC,YAFL;IAGC,GAAG,EAAC,YAHL;IAIC,QAAQ,EAAEC,iBAJX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFD,CAhBD,eAyBC;IAAK,SAAS,EAAC,sBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACC;IAAQ,IAAI,EAAC,QAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBADD,CAzBD,CADD,CADD;AAiCA,CA3FD;;AA6FA,eAAeZ,WAAf"},"metadata":{},"sourceType":"module"}